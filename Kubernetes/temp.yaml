apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config-volume
data:
  config.yaml: |
    admin:
      access_log:
      - name: envoy.access_loggers.stdout
        typed_config:
         #"@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
         "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
         path: "/dev/stderr"
         #path: "/var/log/envoy/access.log"
         #path: "/dev/stdout"
      address:
        socket_address: { address: 0.0.0.0, port_value: 9092 }
    static_resources:
      listeners:
      # ingress
      - name: app_sidecar_listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 6199

        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              # used when emitting stats
              stat_prefix: app_sidecar_hcm_filter
              
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              
              route_config:
                name: app_sidecar_http_route_config
                virtual_hosts:
                # name used when emitting stats, not imp for routing itself
                - name: app_sidecar_virtual_host
                  domains: 
                  - "*"
                  routes:
                  - name:
                    match:
                      prefix: "/"
                    route:
                      cluster: myappimage-sidecar
      clusters:
      - name: myappimage-sidecar
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: myappimage-sidecar
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 6200


---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: app-envoy-sidecar-deployment
  labels:
    app: app-envoy-sidecar

spec:
  replicas: 1

  selector:
    matchLabels:
      app: app-envoy-sidecar

  template:
    metadata:
      labels:
        app: app-envoy-sidecar
    # dckr_pat_kGBQL9TT3j0THoAEUc33vvLw8Jw
    # The imp stuff
    spec:
      containers:
      - name: myappimage-sidecar
        image: amitkewal/myappimage-sidecar:latest
        ports:
        - containerPort: 5200
          name: envoy-port

      # - name: myappimage
      #   image: amitkewal/myappimage:latest
      #   ports:
      #   - containerPort: 5200
      #   # imagePullPolicy: IfNotPresent

      - name: myappimage-envoy
        image: envoyproxy/envoy:v1.24-latest
        ports:
          - containerPort: 9092
            name: envoy-admin
          - containerPort: 28082
            name: envoy-web
        volumeMounts:
          - name: envoy-config-volume
            mountPath: /etc/envoy/
        command: ["/usr/local/bin/envoy"]
        args: ["-c", "/etc/envoy/config.yaml", "-l", "info","--service-cluster","app-envoy-sidecar-svc","--service-node","myappimage-sidecar", "--log-format", "[METADATA][%Y-%m-%d %T.%e][%t][%l][%n] %v"]


---
apiVersion: v1

kind: Service

metadata:
  name: app-envoy-sidecar-svc

spec:
  type: ClusterIP

  selector:
    app: app-envoy-sidecar

  ports:
  - name: app-envoy-sidecar-svc-port
    protocol: TCP
    port: 6199
    targetPort: envoy-port

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app
spec:
  ingressClassName: kong
  rules:
  - host: myapp.sidecar.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: app-envoy-sidecar-svc
            port:
              number: 80