* 
* ==> Audit <==
* |------------|-----------------------------------------------------|----------|-----------------------|---------|---------------------|---------------------|
|  Command   |                        Args                         | Profile  |         User          | Version |     Start Time      |      End Time       |
|------------|-----------------------------------------------------|----------|-----------------------|---------|---------------------|---------------------|
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:18 IST | 08 May 23 17:18 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:18 IST | 08 May 23 17:18 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:18 IST | 08 May 23 17:18 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:18 IST | 08 May 23 17:18 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:19 IST | 08 May 23 17:19 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 08 May 23 17:21 IST | 08 May 23 17:21 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:19 IST | 09 May 23 00:19 IST |
| start      |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:19 IST | 09 May 23 00:19 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:19 IST | 09 May 23 00:19 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:20 IST | 09 May 23 00:20 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:22 IST | 09 May 23 00:22 IST |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:23 IST | 09 May 23 00:23 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:23 IST | 09 May 23 00:23 IST |
| stop       |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 00:54 IST |                     |
| start      |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 13:08 IST | 09 May 23 13:08 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:13 IST | 09 May 23 16:13 IST |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:13 IST | 09 May 23 16:14 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:14 IST | 09 May 23 16:14 IST |
|            | docker.io/library/envoy-opentelemetry:latest        |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:14 IST | 09 May 23 16:14 IST |
|            | docker.io/library/envoy-opentelemetry:latest        |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:23 IST | 09 May 23 16:23 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:26 IST | 09 May 23 16:26 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:28 IST | 09 May 23 16:28 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:36 IST | 09 May 23 16:36 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:37 IST | 09 May 23 16:37 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:37 IST | 09 May 23 16:37 IST |
|            | docker.io/library/envoy-sidecar-flaskapi:latest     |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:37 IST | 09 May 23 16:37 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:39 IST | 09 May 23 16:39 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:48 IST | 09 May 23 16:48 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:50 IST | 09 May 23 16:50 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:50 IST | 09 May 23 16:50 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:51 IST | 09 May 23 16:51 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:54 IST | 09 May 23 16:54 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:55 IST | 09 May 23 16:55 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:56 IST | 09 May 23 16:56 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:56 IST | 09 May 23 16:56 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | rm                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:57 IST | 09 May 23 16:57 IST |
|            | docker.io/library/envoy-sidecar-envoygateway:latest |          |                       |         |                     |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:59 IST | 09 May 23 16:59 IST |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:59 IST |                     |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:59 IST |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 16:59 IST | 09 May 23 16:59 IST |
| start      |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:00 IST | 09 May 23 17:00 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST | 09 May 23 17:05 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST | 09 May 23 17:05 IST |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST |                     |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST | 09 May 23 17:05 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST | 09 May 23 17:05 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:05 IST | 09 May 23 17:05 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:06 IST | 09 May 23 17:06 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:06 IST | 09 May 23 17:06 IST |
| image      | ls                                                  | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:06 IST | 09 May 23 17:06 IST |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:07 IST |                     |
| docker-env |                                                     | minikube | DESKTOP-IG8KGEB\amiti | v1.30.1 | 09 May 23 17:07 IST |                     |
|------------|-----------------------------------------------------|----------|-----------------------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/05/09 17:00:20
Running on machine: DESKTOP-IG8KGEB
Binary: Built with gc go1.20.2 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0509 17:00:20.542836   13416 out.go:296] Setting OutFile to fd 1172 ...
I0509 17:00:20.542836   13416 out.go:343] TERM=xterm,COLORTERM=, which probably does not support color
I0509 17:00:20.542836   13416 out.go:309] Setting ErrFile to fd 1172...
I0509 17:00:20.542836   13416 out.go:343] TERM=xterm,COLORTERM=, which probably does not support color
I0509 17:00:20.543836   13416 oci.go:567] shell is pointing to dockerd inside minikube. will unset to use host
W0509 17:00:20.554835   13416 root.go:312] Error reading config file at C:\Users\amiti\.minikube\config\config.json: open C:\Users\amiti\.minikube\config\config.json: The system cannot find the file specified.
I0509 17:00:20.559787   13416 out.go:303] Setting JSON to false
I0509 17:00:20.566708   13416 start.go:125] hostinfo: {"hostname":"DESKTOP-IG8KGEB","uptime":360107,"bootTime":1683271712,"procs":294,"os":"windows","platform":"Microsoft Windows 10 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.19045.2846 Build 19045.2846","kernelVersion":"10.0.19045.2846 Build 19045.2846","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"f6ee7da5-cc96-47c3-b084-07d58a4e5c05"}
W0509 17:00:20.566708   13416 start.go:133] gopshost.Virtualization returned error: not implemented yet
I0509 17:00:20.568605   13416 out.go:177] * minikube v1.30.1 on Microsoft Windows 10 Pro 10.0.19045.2846 Build 19045.2846
I0509 17:00:20.571954   13416 out.go:177]   - MINIKUBE_ACTIVE_DOCKERD=minikube
I0509 17:00:20.572512   13416 notify.go:220] Checking for updates...
I0509 17:00:20.574704   13416 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0509 17:00:20.576568   13416 driver.go:375] Setting default libvirt URI to qemu:///system
I0509 17:00:20.722554   13416 docker.go:121] docker version: linux-23.0.5:Docker Desktop 4.19.0 (106363)
I0509 17:00:20.729381   13416 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0509 17:00:21.133993   13416 info.go:266] docker info: {ID:6b180258-fd26-4f9f-b6fe-d5da7a68a590 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:13 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:71 OomKillDisable:true NGoroutines:118 SystemTime:2023-05-09 11:30:21.071117806 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:9 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8302559232 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:23.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:2806fc1057397dbaeefbea0e4e17bddfbd388f38 Expected:2806fc1057397dbaeefbea0e4e17bddfbd388f38} RuncCommit:{ID:v1.1.5-0-gf19387a Expected:v1.1.5-0-gf19387a} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.10.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.17.3] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.19] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.4] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:v0.10.0]] Warnings:<nil>}}
I0509 17:00:21.136658   13416 out.go:177] * Using the docker driver based on existing profile
I0509 17:00:21.137706   13416 start.go:295] selected driver: docker
I0509 17:00:21.137706   13416 start.go:870] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\amiti:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0509 17:00:21.137706   13416 start.go:881] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0509 17:00:21.149338   13416 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0509 17:00:21.445153   13416 info.go:266] docker info: {ID:6b180258-fd26-4f9f-b6fe-d5da7a68a590 Containers:1 ContainersRunning:0 ContainersPaused:0 ContainersStopped:1 Images:13 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:71 OomKillDisable:true NGoroutines:118 SystemTime:2023-05-09 11:30:21.364112876 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:9 KernelVersion:5.15.90.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8302559232 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:23.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:2806fc1057397dbaeefbea0e4e17bddfbd388f38 Expected:2806fc1057397dbaeefbea0e4e17bddfbd388f38} RuncCommit:{ID:v1.1.5-0-gf19387a Expected:v1.1.5-0-gf19387a} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.10.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.17.3] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.19] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.4] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:C:\Program Files\Docker\cli-plugins\docker-scan.exe SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:v0.10.0]] Warnings:<nil>}}
I0509 17:00:21.566844   13416 cni.go:84] Creating CNI manager for ""
I0509 17:00:21.566844   13416 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0509 17:00:21.566844   13416 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\amiti:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0509 17:00:21.568527   13416 out.go:177] * Starting control plane node minikube in cluster minikube
I0509 17:00:21.571263   13416 cache.go:120] Beginning downloading kic base image for docker with docker
I0509 17:00:21.572448   13416 out.go:177] * Pulling base image ...
I0509 17:00:21.574133   13416 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0509 17:00:21.574744   13416 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 in local docker daemon
I0509 17:00:21.574744   13416 preload.go:148] Found local preload: C:\Users\amiti\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4
I0509 17:00:21.575310   13416 cache.go:57] Caching tarball of preloaded images
I0509 17:00:21.576059   13416 preload.go:174] Found C:\Users\amiti\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0509 17:00:21.576059   13416 cache.go:60] Finished verifying existence of preloaded tar for  v1.26.3 on docker
I0509 17:00:21.576059   13416 profile.go:148] Saving config to C:\Users\amiti\.minikube\profiles\minikube\config.json ...
I0509 17:00:21.702581   13416 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 in local docker daemon, skipping pull
I0509 17:00:21.702581   13416 cache.go:143] gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 exists in daemon, skipping load
I0509 17:00:21.703447   13416 cache.go:193] Successfully downloaded all kic artifacts
I0509 17:00:21.703447   13416 start.go:364] acquiring machines lock for minikube: {Name:mk54d79d507c71ed51996557dc0d21b228d557fb Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0509 17:00:21.703447   13416 start.go:368] acquired machines lock for "minikube" in 0s
I0509 17:00:21.703447   13416 start.go:96] Skipping create...Using existing machine configuration
I0509 17:00:21.703999   13416 fix.go:55] fixHost starting: 
I0509 17:00:21.705579   13416 out.go:177] * Noticed you have an activated docker-env on docker driver in this terminal:
W0509 17:00:21.706628   13416 out.go:239] ! Please re-eval your docker-env, To ensure your environment variables have updated ports:

	'minikube -p minikube docker-env'

	
I0509 17:00:21.718207   13416 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0509 17:00:21.840401   13416 fix.go:103] recreateIfNeeded on minikube: state=Stopped err=<nil>
W0509 17:00:21.840401   13416 fix.go:129] unexpected machine state, will restart: <nil>
I0509 17:00:21.841584   13416 out.go:177] * Restarting existing docker container for "minikube" ...
I0509 17:00:21.849524   13416 cli_runner.go:164] Run: docker start minikube
I0509 17:00:22.509881   13416 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0509 17:00:22.650164   13416 kic.go:426] container "minikube" state is running.
I0509 17:00:22.659511   13416 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0509 17:00:22.802214   13416 profile.go:148] Saving config to C:\Users\amiti\.minikube\profiles\minikube\config.json ...
I0509 17:00:22.803803   13416 machine.go:88] provisioning docker machine ...
I0509 17:00:22.804357   13416 ubuntu.go:169] provisioning hostname "minikube"
I0509 17:00:22.810274   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:22.958209   13416 main.go:141] libmachine: Using SSH client type: native
I0509 17:00:22.958769   13416 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc08640] 0xc0b500 <nil>  [] 0s} 127.0.0.1 62089 <nil> <nil>}
I0509 17:00:22.958769   13416 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0509 17:00:23.195990   13416 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0509 17:00:23.203216   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:23.339835   13416 main.go:141] libmachine: Using SSH client type: native
I0509 17:00:23.340362   13416 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc08640] 0xc0b500 <nil>  [] 0s} 127.0.0.1 62089 <nil> <nil>}
I0509 17:00:23.340362   13416 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0509 17:00:23.523629   13416 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0509 17:00:23.524163   13416 ubuntu.go:175] set auth options {CertDir:C:\Users\amiti\.minikube CaCertPath:C:\Users\amiti\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\amiti\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\amiti\.minikube\machines\server.pem ServerKeyPath:C:\Users\amiti\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\amiti\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\amiti\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\amiti\.minikube}
I0509 17:00:23.524163   13416 ubuntu.go:177] setting up certificates
I0509 17:00:23.524163   13416 provision.go:83] configureAuth start
I0509 17:00:23.530502   13416 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0509 17:00:23.647348   13416 provision.go:138] copyHostCerts
I0509 17:00:23.648830   13416 exec_runner.go:144] found C:\Users\amiti\.minikube/ca.pem, removing ...
I0509 17:00:23.649411   13416 exec_runner.go:207] rm: C:\Users\amiti\.minikube\ca.pem
I0509 17:00:23.649411   13416 exec_runner.go:151] cp: C:\Users\amiti\.minikube\certs\ca.pem --> C:\Users\amiti\.minikube/ca.pem (1074 bytes)
I0509 17:00:23.649963   13416 exec_runner.go:144] found C:\Users\amiti\.minikube/cert.pem, removing ...
I0509 17:00:23.649963   13416 exec_runner.go:207] rm: C:\Users\amiti\.minikube\cert.pem
I0509 17:00:23.649963   13416 exec_runner.go:151] cp: C:\Users\amiti\.minikube\certs\cert.pem --> C:\Users\amiti\.minikube/cert.pem (1119 bytes)
I0509 17:00:23.650482   13416 exec_runner.go:144] found C:\Users\amiti\.minikube/key.pem, removing ...
I0509 17:00:23.650482   13416 exec_runner.go:207] rm: C:\Users\amiti\.minikube\key.pem
I0509 17:00:23.650482   13416 exec_runner.go:151] cp: C:\Users\amiti\.minikube\certs\key.pem --> C:\Users\amiti\.minikube/key.pem (1675 bytes)
I0509 17:00:23.651010   13416 provision.go:112] generating server cert: C:\Users\amiti\.minikube\machines\server.pem ca-key=C:\Users\amiti\.minikube\certs\ca.pem private-key=C:\Users\amiti\.minikube\certs\ca-key.pem org=amiti.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0509 17:00:23.944071   13416 provision.go:172] copyRemoteCerts
I0509 17:00:23.971822   13416 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0509 17:00:23.978902   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:24.106775   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:24.265397   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0509 17:00:24.317045   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\machines\server.pem --> /etc/docker/server.pem (1200 bytes)
I0509 17:00:24.354503   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0509 17:00:24.390997   13416 provision.go:86] duration metric: configureAuth took 866.8345ms
I0509 17:00:24.390997   13416 ubuntu.go:193] setting minikube options for container-runtime
I0509 17:00:24.391525   13416 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0509 17:00:24.397276   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:24.533339   13416 main.go:141] libmachine: Using SSH client type: native
I0509 17:00:24.533945   13416 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc08640] 0xc0b500 <nil>  [] 0s} 127.0.0.1 62089 <nil> <nil>}
I0509 17:00:24.533945   13416 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0509 17:00:24.668358   13416 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0509 17:00:24.668358   13416 ubuntu.go:71] root file system type: overlay
I0509 17:00:24.668358   13416 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0509 17:00:24.674850   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:24.808785   13416 main.go:141] libmachine: Using SSH client type: native
I0509 17:00:24.809308   13416 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc08640] 0xc0b500 <nil>  [] 0s} 127.0.0.1 62089 <nil> <nil>}
I0509 17:00:24.809308   13416 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0509 17:00:24.987605   13416 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0509 17:00:24.993931   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:25.130305   13416 main.go:141] libmachine: Using SSH client type: native
I0509 17:00:25.130305   13416 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xc08640] 0xc0b500 <nil>  [] 0s} 127.0.0.1 62089 <nil> <nil>}
I0509 17:00:25.130305   13416 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0509 17:00:25.298647   13416 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0509 17:00:25.298647   13416 machine.go:91] provisioned docker machine in 2.4948441s
I0509 17:00:25.298647   13416 start.go:300] post-start starting for "minikube" (driver="docker")
I0509 17:00:25.298647   13416 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0509 17:00:25.309345   13416 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0509 17:00:25.314738   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:25.437797   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:25.568857   13416 ssh_runner.go:195] Run: cat /etc/os-release
I0509 17:00:25.574250   13416 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0509 17:00:25.574250   13416 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0509 17:00:25.574250   13416 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0509 17:00:25.574250   13416 info.go:137] Remote host: Ubuntu 20.04.5 LTS
I0509 17:00:25.574250   13416 filesync.go:126] Scanning C:\Users\amiti\.minikube\addons for local assets ...
I0509 17:00:25.574784   13416 filesync.go:126] Scanning C:\Users\amiti\.minikube\files for local assets ...
I0509 17:00:25.574784   13416 start.go:303] post-start completed in 276.1374ms
I0509 17:00:25.576464   13416 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0509 17:00:25.582488   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:25.713533   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:25.810678   13416 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0509 17:00:25.817813   13416 fix.go:57] fixHost completed within 4.1138142s
I0509 17:00:25.817813   13416 start.go:83] releasing machines lock for "minikube", held for 4.1143663s
I0509 17:00:25.824367   13416 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0509 17:00:25.961676   13416 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0509 17:00:25.964732   13416 ssh_runner.go:195] Run: cat /version.json
I0509 17:00:25.979935   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:25.984262   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:26.133652   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:26.145143   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:26.788477   13416 ssh_runner.go:195] Run: systemctl --version
I0509 17:00:26.795971   13416 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0509 17:00:26.811997   13416 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0509 17:00:26.828716   13416 start.go:408] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0509 17:00:26.840015   13416 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0509 17:00:26.855898   13416 cni.go:258] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0509 17:00:26.855898   13416 start.go:481] detecting cgroup driver to use...
I0509 17:00:26.855898   13416 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0509 17:00:26.855898   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0509 17:00:26.890340   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0509 17:00:26.908837   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0509 17:00:26.925736   13416 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0509 17:00:26.928385   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0509 17:00:26.946380   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0509 17:00:26.964628   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0509 17:00:26.983044   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0509 17:00:27.000683   13416 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0509 17:00:27.019436   13416 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0509 17:00:27.048262   13416 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0509 17:00:27.074254   13416 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0509 17:00:27.098670   13416 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0509 17:00:27.228142   13416 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0509 17:00:27.335559   13416 start.go:481] detecting cgroup driver to use...
I0509 17:00:27.335559   13416 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0509 17:00:27.351518   13416 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0509 17:00:27.376950   13416 cruntime.go:276] skipping containerd shutdown because we are bound to it
I0509 17:00:27.395697   13416 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0509 17:00:27.420608   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0509 17:00:27.460230   13416 ssh_runner.go:195] Run: which cri-dockerd
I0509 17:00:27.479447   13416 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0509 17:00:27.494643   13416 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0509 17:00:27.535110   13416 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0509 17:00:27.672530   13416 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0509 17:00:27.800716   13416 docker.go:538] configuring docker to use "cgroupfs" as cgroup driver...
I0509 17:00:27.800716   13416 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0509 17:00:27.837695   13416 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0509 17:00:28.077834   13416 ssh_runner.go:195] Run: sudo systemctl restart docker
I0509 17:00:28.403522   13416 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0509 17:00:28.531744   13416 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0509 17:00:28.657293   13416 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0509 17:00:28.781238   13416 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0509 17:00:28.902467   13416 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0509 17:00:28.936790   13416 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0509 17:00:29.066642   13416 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0509 17:00:29.157551   13416 start.go:528] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0509 17:00:29.161344   13416 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0509 17:00:29.167303   13416 start.go:549] Will wait 60s for crictl version
I0509 17:00:29.168919   13416 ssh_runner.go:195] Run: which crictl
I0509 17:00:29.185251   13416 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0509 17:00:29.233612   13416 start.go:565] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  23.0.2
RuntimeApiVersion:  v1alpha2
I0509 17:00:29.239994   13416 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0509 17:00:29.269527   13416 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0509 17:00:29.294620   13416 out.go:204] * Preparing Kubernetes v1.26.3 on Docker 23.0.2 ...
I0509 17:00:29.301422   13416 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0509 17:00:29.544465   13416 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0509 17:00:29.546218   13416 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0509 17:00:29.551482   13416 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0509 17:00:29.574419   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0509 17:00:29.698617   13416 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0509 17:00:29.704775   13416 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0509 17:00:29.724305   13416 docker.go:639] Got preloaded images: -- stdout --
envoy-sidecar-envoygateway:latest
envoy-prometheus:latest
envoy-opentelemetry:latest
otel/opentelemetry-collector-contrib:0.76.1
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0509 17:00:29.724305   13416 docker.go:569] Images already preloaded, skipping extraction
I0509 17:00:29.730119   13416 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0509 17:00:29.751487   13416 docker.go:639] Got preloaded images: -- stdout --
envoy-sidecar-envoygateway:latest
envoy-prometheus:latest
envoy-opentelemetry:latest
otel/opentelemetry-collector-contrib:0.76.1
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0509 17:00:29.751487   13416 cache_images.go:84] Images are preloaded, skipping loading
I0509 17:00:29.758401   13416 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0509 17:00:29.786217   13416 cni.go:84] Creating CNI manager for ""
I0509 17:00:29.786241   13416 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0509 17:00:29.786249   13416 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0509 17:00:29.786249   13416 kubeadm.go:172] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.26.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m]}
I0509 17:00:29.786773   13416 kubeadm.go:177] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.26.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0509 17:00:29.787816   13416 kubeadm.go:968] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.26.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0509 17:00:29.798307   13416 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.26.3
I0509 17:00:29.816011   13416 binaries.go:44] Found k8s binaries, skipping transfer
I0509 17:00:29.826179   13416 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0509 17:00:29.841943   13416 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0509 17:00:29.869012   13416 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0509 17:00:29.896535   13416 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2084 bytes)
I0509 17:00:29.926218   13416 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0509 17:00:29.931540   13416 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0509 17:00:29.951644   13416 certs.go:56] Setting up C:\Users\amiti\.minikube\profiles\minikube for IP: 192.168.49.2
I0509 17:00:29.951644   13416 certs.go:186] acquiring lock for shared ca certs: {Name:mk933a64613b123f188951ac1e48d4e2832722e0 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0509 17:00:29.951644   13416 certs.go:195] skipping minikubeCA CA generation: C:\Users\amiti\.minikube\ca.key
I0509 17:00:29.952220   13416 certs.go:195] skipping proxyClientCA CA generation: C:\Users\amiti\.minikube\proxy-client-ca.key
I0509 17:00:29.952754   13416 certs.go:311] skipping minikube-user signed cert generation: C:\Users\amiti\.minikube\profiles\minikube\client.key
I0509 17:00:29.953286   13416 certs.go:311] skipping minikube signed cert generation: C:\Users\amiti\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0509 17:00:29.953822   13416 certs.go:311] skipping aggregator signed cert generation: C:\Users\amiti\.minikube\profiles\minikube\proxy-client.key
I0509 17:00:29.954906   13416 certs.go:401] found cert: C:\Users\amiti\.minikube\certs\C:\Users\amiti\.minikube\certs\ca-key.pem (1675 bytes)
I0509 17:00:29.954906   13416 certs.go:401] found cert: C:\Users\amiti\.minikube\certs\C:\Users\amiti\.minikube\certs\ca.pem (1074 bytes)
I0509 17:00:29.954906   13416 certs.go:401] found cert: C:\Users\amiti\.minikube\certs\C:\Users\amiti\.minikube\certs\cert.pem (1119 bytes)
I0509 17:00:29.955436   13416 certs.go:401] found cert: C:\Users\amiti\.minikube\certs\C:\Users\amiti\.minikube\certs\key.pem (1675 bytes)
I0509 17:00:29.959204   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0509 17:00:30.002776   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0509 17:00:30.042585   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0509 17:00:30.083500   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0509 17:00:30.120915   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0509 17:00:30.158116   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0509 17:00:30.206181   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0509 17:00:30.267507   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0509 17:00:30.316037   13416 ssh_runner.go:362] scp C:\Users\amiti\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0509 17:00:30.359212   13416 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0509 17:00:30.387700   13416 ssh_runner.go:195] Run: openssl version
I0509 17:00:30.405031   13416 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0509 17:00:30.422747   13416 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0509 17:00:30.427510   13416 certs.go:444] hashing: -rw-r--r-- 1 root root 1111 May  8 10:31 /usr/share/ca-certificates/minikubeCA.pem
I0509 17:00:30.428552   13416 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0509 17:00:30.444851   13416 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0509 17:00:30.460659   13416 kubeadm.go:401] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\amiti:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0509 17:00:30.466528   13416 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0509 17:00:30.496760   13416 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0509 17:00:30.510944   13416 kubeadm.go:416] found existing configuration files, will attempt cluster restart
I0509 17:00:30.510944   13416 kubeadm.go:633] restartCluster start
I0509 17:00:30.520669   13416 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0509 17:00:30.534906   13416 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0509 17:00:30.540642   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0509 17:00:30.669101   13416 kubeconfig.go:92] found "minikube" server: "https://127.0.0.1:64525"
I0509 17:00:30.669101   13416 kubeconfig.go:135] verify returned: got: 127.0.0.1:64525, want: 127.0.0.1:62088
I0509 17:00:30.669649   13416 lock.go:35] WriteFile acquiring C:\Users\amiti\.kube\config: {Name:mk0b530ddc267f90f9123b2aeddd59cd337938a9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0509 17:00:30.697452   13416 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0509 17:00:30.716087   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:30.726811   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:30.746094   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:31.246398   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:31.256157   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:31.273264   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:31.753478   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:31.777579   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:31.796660   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:32.257751   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:32.269582   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:32.285242   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:32.756293   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:32.766354   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:32.782489   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:33.255758   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:33.270748   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:33.286135   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:33.754268   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:33.773802   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:33.790170   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:34.255033   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:34.264978   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:34.280906   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:34.749234   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:34.765430   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:34.781017   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:35.261339   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:35.279777   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:35.299959   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:35.759422   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:35.769669   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:35.786446   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:36.256359   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:36.267919   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:36.284544   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:36.759203   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:36.785980   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:36.801715   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:37.253847   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:37.271430   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:37.291301   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:37.750551   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:37.764486   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:37.780872   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:38.246967   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:38.257750   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:38.274252   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:38.758622   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:38.775302   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:38.791766   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:39.256415   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:39.266106   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:39.282506   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:39.761061   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:39.771905   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:39.789081   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:40.253473   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:40.264248   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:40.279755   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:40.747227   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:40.765826   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:40.781940   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:40.781940   13416 api_server.go:165] Checking apiserver status ...
I0509 17:00:40.792393   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0509 17:00:40.808349   13416 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0509 17:00:40.808349   13416 kubeadm.go:608] needs reconfigure: apiserver error: timed out waiting for the condition
I0509 17:00:40.808349   13416 kubeadm.go:1120] stopping kube-system containers ...
I0509 17:00:40.814189   13416 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0509 17:00:40.833579   13416 docker.go:465] Stopping containers: [b1e812c8504c 403179cbb093 ea5a3c2f3521 d688a267fb2f 1a1374b9c516 024a5a1761bb 69bc80e91b43 58c2040706fe ef6a5727e1bb b36e398c56ee bee3291e1062 7fbbb470551f 86cb4d58b912 542f41158de5]
I0509 17:00:40.839554   13416 ssh_runner.go:195] Run: docker stop b1e812c8504c 403179cbb093 ea5a3c2f3521 d688a267fb2f 1a1374b9c516 024a5a1761bb 69bc80e91b43 58c2040706fe ef6a5727e1bb b36e398c56ee bee3291e1062 7fbbb470551f 86cb4d58b912 542f41158de5
I0509 17:00:40.869108   13416 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I0509 17:00:40.898561   13416 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0509 17:00:40.913931   13416 kubeadm.go:155] found existing configuration files:
-rw------- 1 root root 5639 May  8 10:31 /etc/kubernetes/admin.conf
-rw------- 1 root root 5652 May  9 07:38 /etc/kubernetes/controller-manager.conf
-rw------- 1 root root 1971 May  8 10:31 /etc/kubernetes/kubelet.conf
-rw------- 1 root root 5604 May  9 07:38 /etc/kubernetes/scheduler.conf

I0509 17:00:40.923879   13416 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0509 17:00:40.948478   13416 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0509 17:00:40.973923   13416 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0509 17:00:40.987878   13416 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 1
stdout:

stderr:
I0509 17:00:40.997776   13416 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0509 17:00:41.023206   13416 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0509 17:00:41.037431   13416 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 1
stdout:

stderr:
I0509 17:00:41.047581   13416 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0509 17:00:41.071147   13416 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0509 17:00:41.086099   13416 kubeadm.go:710] reconfiguring cluster from /var/tmp/minikube/kubeadm.yaml
I0509 17:00:41.086099   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:41.146404   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:41.787894   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase kubelet-start --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:41.965762   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:42.029187   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:42.111014   13416 api_server.go:51] waiting for apiserver process to appear ...
I0509 17:00:42.124426   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0509 17:00:42.697406   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0509 17:00:43.206353   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0509 17:00:43.722193   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0509 17:00:44.081824   13416 api_server.go:71] duration metric: took 1.9707433s to wait for apiserver process to appear ...
I0509 17:00:44.081888   13416 api_server.go:87] waiting for apiserver healthz status ...
I0509 17:00:44.081964   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:44.093140   13416 api_server.go:268] stopped: https://127.0.0.1:62088/healthz: Get "https://127.0.0.1:62088/healthz": EOF
I0509 17:00:44.608839   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:47.879169   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W0509 17:00:47.879169   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I0509 17:00:48.107959   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:48.137437   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:48.137458   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:48.604389   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:48.619463   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:48.619463   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:49.105998   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:49.206545   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:49.206545   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:49.604070   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:49.785500   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:49.785500   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:50.104690   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:50.285194   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:50.285194   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:50.599475   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:50.777603   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0509 17:00:50.777603   13416 api_server.go:102] status: https://127.0.0.1:62088/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0509 17:00:51.108316   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:51.179894   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 200:
ok
I0509 17:00:51.214742   13416 api_server.go:140] control plane version: v1.26.3
I0509 17:00:51.214742   13416 api_server.go:130] duration metric: took 7.1328544s to wait for apiserver health ...
I0509 17:00:51.214742   13416 cni.go:84] Creating CNI manager for ""
I0509 17:00:51.214742   13416 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0509 17:00:51.219086   13416 out.go:177] * Configuring bridge CNI (Container Networking Interface) ...
I0509 17:00:51.237044   13416 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0509 17:00:51.295510   13416 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0509 17:00:51.786690   13416 system_pods.go:43] waiting for kube-system pods to appear ...
I0509 17:00:51.823009   13416 system_pods.go:59] 7 kube-system pods found
I0509 17:00:51.823009   13416 system_pods.go:61] "coredns-787d4945fb-27twp" [87f7b1e8-47e2-4f29-87b7-7f7ccd7c6273] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0509 17:00:51.823009   13416 system_pods.go:61] "etcd-minikube" [26ea7580-ba5d-432b-ade1-efc10c64222e] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0509 17:00:51.823009   13416 system_pods.go:61] "kube-apiserver-minikube" [4c534c9c-c651-470e-977f-e01d13b8163f] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0509 17:00:51.823009   13416 system_pods.go:61] "kube-controller-manager-minikube" [1b5c72a2-e0f6-46d9-9927-7fa35214b2a1] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0509 17:00:51.823009   13416 system_pods.go:61] "kube-proxy-vjs9g" [48eaf23f-927d-4cf6-8365-e929fb1eb6f8] Running / Ready:ContainersNotReady (containers with unready status: [kube-proxy]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-proxy])
I0509 17:00:51.823009   13416 system_pods.go:61] "kube-scheduler-minikube" [bab641ed-ee45-49a0-8666-474d82b3a4fd] Running
I0509 17:00:51.823009   13416 system_pods.go:61] "storage-provisioner" [e9505025-7ab2-4ec5-93bf-3d8b5ac0165c] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I0509 17:00:51.823009   13416 system_pods.go:74] duration metric: took 36.3192ms to wait for pod list to return data ...
I0509 17:00:51.823009   13416 node_conditions.go:102] verifying NodePressure condition ...
I0509 17:00:51.898816   13416 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0509 17:00:51.898816   13416 node_conditions.go:123] node cpu capacity is 8
I0509 17:00:51.898816   13416 node_conditions.go:105] duration metric: took 75.8067ms to run NodePressure ...
I0509 17:00:51.898816   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml"
I0509 17:00:55.722904   13416 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml": (3.8240884s)
I0509 17:00:55.722904   13416 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0509 17:00:55.818933   13416 ops.go:34] apiserver oom_adj: -16
I0509 17:00:55.818933   13416 kubeadm.go:637] restartCluster took 25.3079892s
I0509 17:00:55.818933   13416 kubeadm.go:403] StartCluster complete in 25.3582734s
I0509 17:00:55.818933   13416 settings.go:142] acquiring lock: {Name:mk8dce35ef5b4b8bcba7f622707548ab621482d6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0509 17:00:55.818933   13416 settings.go:150] Updating kubeconfig:  C:\Users\amiti\.kube\config
I0509 17:00:55.821934   13416 lock.go:35] WriteFile acquiring C:\Users\amiti\.kube\config: {Name:mk0b530ddc267f90f9123b2aeddd59cd337938a9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0509 17:00:55.823921   13416 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0509 17:00:55.823921   13416 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0509 17:00:55.824928   13416 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0509 17:00:55.825921   13416 addons.go:66] Setting storage-provisioner=true in profile "minikube"
I0509 17:00:55.825921   13416 addons.go:66] Setting default-storageclass=true in profile "minikube"
I0509 17:00:55.825921   13416 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0509 17:00:55.825921   13416 addons.go:228] Setting addon storage-provisioner=true in "minikube"
W0509 17:00:55.825921   13416 addons.go:237] addon storage-provisioner should already be in state true
I0509 17:00:55.826920   13416 host.go:66] Checking if "minikube" exists ...
I0509 17:00:55.844918   13416 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0509 17:00:55.844918   13416 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0509 17:00:55.845920   13416 out.go:177] * Verifying Kubernetes components...
I0509 17:00:55.852917   13416 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0509 17:00:55.853941   13416 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0509 17:00:55.862919   13416 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0509 17:00:56.005662   13416 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0509 17:00:56.006717   13416 addons.go:420] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0509 17:00:56.006717   13416 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0509 17:00:56.014731   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:56.016855   13416 start.go:889] CoreDNS already contains "host.minikube.internal" host record, skipping...
I0509 17:00:56.025934   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0509 17:00:56.028056   13416 addons.go:228] Setting addon default-storageclass=true in "minikube"
W0509 17:00:56.028056   13416 addons.go:237] addon default-storageclass should already be in state true
I0509 17:00:56.028596   13416 host.go:66] Checking if "minikube" exists ...
I0509 17:00:56.043501   13416 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0509 17:00:56.157814   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:56.170816   13416 api_server.go:51] waiting for apiserver process to appear ...
I0509 17:00:56.181815   13416 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0509 17:00:56.184814   13416 addons.go:420] installing /etc/kubernetes/addons/storageclass.yaml
I0509 17:00:56.184814   13416 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0509 17:00:56.190815   13416 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0509 17:00:56.201820   13416 api_server.go:71] duration metric: took 356.9023ms to wait for apiserver process to appear ...
I0509 17:00:56.201820   13416 api_server.go:87] waiting for apiserver healthz status ...
I0509 17:00:56.201820   13416 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:62088/healthz ...
I0509 17:00:56.209816   13416 api_server.go:278] https://127.0.0.1:62088/healthz returned 200:
ok
I0509 17:00:56.210816   13416 api_server.go:140] control plane version: v1.26.3
I0509 17:00:56.210816   13416 api_server.go:130] duration metric: took 8.9958ms to wait for apiserver health ...
I0509 17:00:56.210816   13416 system_pods.go:43] waiting for kube-system pods to appear ...
I0509 17:00:56.216815   13416 system_pods.go:59] 7 kube-system pods found
I0509 17:00:56.216815   13416 system_pods.go:61] "coredns-787d4945fb-27twp" [87f7b1e8-47e2-4f29-87b7-7f7ccd7c6273] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0509 17:00:56.216815   13416 system_pods.go:61] "etcd-minikube" [26ea7580-ba5d-432b-ade1-efc10c64222e] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0509 17:00:56.216815   13416 system_pods.go:61] "kube-apiserver-minikube" [4c534c9c-c651-470e-977f-e01d13b8163f] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0509 17:00:56.216815   13416 system_pods.go:61] "kube-controller-manager-minikube" [1b5c72a2-e0f6-46d9-9927-7fa35214b2a1] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0509 17:00:56.216815   13416 system_pods.go:61] "kube-proxy-vjs9g" [48eaf23f-927d-4cf6-8365-e929fb1eb6f8] Running
I0509 17:00:56.216815   13416 system_pods.go:61] "kube-scheduler-minikube" [bab641ed-ee45-49a0-8666-474d82b3a4fd] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0509 17:00:56.216815   13416 system_pods.go:61] "storage-provisioner" [e9505025-7ab2-4ec5-93bf-3d8b5ac0165c] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I0509 17:00:56.216815   13416 system_pods.go:74] duration metric: took 5.9993ms to wait for pod list to return data ...
I0509 17:00:56.216815   13416 kubeadm.go:578] duration metric: took 371.8974ms to wait for : map[apiserver:true system_pods:true] ...
I0509 17:00:56.216815   13416 node_conditions.go:102] verifying NodePressure condition ...
I0509 17:00:56.221815   13416 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0509 17:00:56.221815   13416 node_conditions.go:123] node cpu capacity is 8
I0509 17:00:56.221815   13416 node_conditions.go:105] duration metric: took 5.0004ms to run NodePressure ...
I0509 17:00:56.221815   13416 start.go:228] waiting for startup goroutines ...
I0509 17:00:56.293001   13416 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0509 17:00:56.335273   13416 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:62089 SSHKeyPath:C:\Users\amiti\.minikube\machines\minikube\id_rsa Username:docker}
I0509 17:00:56.463625   13416 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0509 17:00:56.986614   13416 out.go:177] * Enabled addons: storage-provisioner, default-storageclass
I0509 17:00:56.989271   13416 addons.go:499] enable addons completed in 1.1653496s: enabled=[storage-provisioner default-storageclass]
I0509 17:00:56.989271   13416 start.go:233] waiting for cluster config update ...
I0509 17:00:56.989271   13416 start.go:242] writing updated cluster config ...
I0509 17:00:56.991879   13416 ssh_runner.go:195] Run: rm -f paused
I0509 17:00:57.121176   13416 start.go:568] kubectl: 1.25.9, cluster: 1.26.3 (minor skew: 1)
I0509 17:00:57.122660   13416 out.go:177] * Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
